<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administration des Coupons - Romaric Project</title>
    <link rel="icon" type="image/png" href="/images/logo.png" />

    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'><path fill='%23000' d='M466.5 83.7l-192-80a48.15 48.15 0 0 0-36.9 0l-192 80C27.7 91.1 16 108.6 16 128c0 198.5 114.5 335.7 221.5 380.3 11.8 4.9 25.1 4.9 36.9 0C360.1 472.6 496 349.3 496 128c0-19.4-11.7-36.9-29.5-44.3zM256.1 446.3l-.1-381L426.8 96.3c1.8.8 2.9 2.6 2.9 4.5 0 175.2-97.4 310.8-173.6 345.5z'/></svg>">
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="px-4 py-6 sm:px-0">
            <div class="flex justify-between items-center">
                <h1 class="text-3xl font-bold text-gray-900">Administration des Coupons</h1>
                <div class="flex space-x-4">
                    <a href="/" class="bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded">
                        Accueil
                    </a>
                    <button onclick="logout()" class="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                        Déconnexion
                    </button>
                </div>
            </div>
        </div>

        <!-- Coupons List -->
        <div class="px-4 py-6 sm:px-0">
            <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                <div class="px-4 py-5 sm:px-6">
                    <div class="flex justify-between items-center">
                        <div>
                            <h3 class="text-lg leading-6 font-medium text-gray-900">
                                Liste des Coupons
                            </h3>
                            <p class="mt-1 max-w-2xl text-sm text-gray-500">
                                Gérez les coupons et envoyez les emails de confirmation.
                            </p>
                        </div>
                        <div class="flex space-x-2">
                            <a href="/pages/admin-users" class="inline-flex items-center px-4 py-2 border border-blue-300 text-sm font-medium rounded-md text-blue-700 bg-blue-50 hover:bg-blue-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition">
                                <i class="fas fa-users mr-2"></i>
                                Gestion Utilisateurs
                            </a>
                            <!-- Bouton Supprimer Tous -->
                            <button onclick="deleteAllCoupons()" 
                                    class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition">
                                <i class="fas fa-trash-alt mr-2"></i>
                                Supprimer Tous
                            </button>
                        </div>
                    </div>
                </div>
                
                <!-- Onglets de filtrage -->
                <div class="border-t border-gray-200">
                    <div class="px-4 py-3">
                        <div class="flex space-x-1 bg-gray-100 p-1 rounded-lg">
                            <button onclick="filterCoupons('all')" 
                                    id="tab-all"
                                    class="flex-1 py-2 px-4 text-sm font-medium rounded-md transition-all duration-200 bg-white text-gray-900 shadow-sm">
                                <i class="fas fa-list mr-2"></i>
                                Tous (<span id="count-all">0</span>)
                            </button>
                            <button onclick="filterCoupons('pending')" 
                                    id="tab-pending"
                                    class="flex-1 py-2 px-4 text-sm font-medium rounded-md transition-all duration-200 text-gray-600 hover:text-gray-900 hover:bg-white">
                                <i class="fas fa-clock mr-2"></i>
                                En attente (<span id="count-pending">0</span>)
                            </button>
                            <button onclick="filterCoupons('verified')" 
                                    id="tab-verified"
                                    class="flex-1 py-2 px-4 text-sm font-medium rounded-md transition-all duration-200 text-gray-600 hover:text-gray-900 hover:bg-white">
                                <i class="fas fa-check-circle mr-2"></i>
                                Validés (<span id="count-verified">0</span>)
                            </button>
                            <button onclick="filterCoupons('invalid')" 
                                    id="tab-invalid"
                                    class="flex-1 py-2 px-4 text-sm font-medium rounded-md transition-all duration-200 text-gray-600 hover:text-gray-900 hover:bg-white">
                                <i class="fas fa-times-circle mr-2"></i>
                                Rejetés (<span id="count-invalid">0</span>)
                            </button>
                        </div>
                    </div>
                </div>
                
                <div class="border-t border-gray-200">
                    <div id="couponsList" class="divide-y divide-gray-200">
                        <div class="p-4 text-center text-gray-500">
                            Chargement des coupons...
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Messages -->
        <div id="message" class="hidden mt-4 p-4 rounded-md"></div>
    </div>

    <!-- Modal de Confirmation - Style Moderne -->
    <div id="confirmationModal" class="fixed inset-0 z-50 overflow-y-auto" style="display: none;">
        <!-- Backdrop avec effet de flou -->
        <div class="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm transition-opacity"></div>
        
        <!-- Container centré -->
        <div class="flex min-h-full items-center justify-center p-4 text-center sm:p-0">
            <div class="relative transform overflow-hidden rounded-2xl bg-white px-8 pb-8 pt-6 text-left shadow-2xl transition-all sm:my-8 sm:w-full sm:max-w-md">
                <!-- Icône moderne avec gradient -->
                <div class="mx-auto flex h-16 w-16 items-center justify-center rounded-full bg-gradient-to-br from-red-400 to-red-600 shadow-lg">
                    <i class="fas fa-exclamation-triangle text-white text-2xl"></i>
                </div>
                
                <!-- Contenu -->
                <div class="mt-6 text-center">
                    <h3 class="text-xl font-bold text-gray-900 mb-3" id="modalTitle">Confirmer la suppression</h3>
                    <div class="mb-8">
                        <p class="text-gray-600 leading-relaxed" id="modalMessage">
                            Cette action est irréversible. Êtes-vous sûr de vouloir continuer ?
                        </p>
                    </div>
                    
                    <!-- Boutons modernes -->
                    <div class="flex flex-col-reverse sm:flex-row sm:justify-center gap-3">
                        <button id="cancelButton" onclick="closeModal()"
                                class="inline-flex justify-center items-center px-6 py-3 border border-gray-300 text-base font-medium rounded-xl text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 transition-all duration-200 shadow-sm">
                            <i class="fas fa-times mr-2"></i>
                            Annuler
                        </button>
                        <button id="confirmButton" 
                                class="inline-flex justify-center items-center px-6 py-3 border border-transparent text-base font-medium rounded-xl text-white bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-105">
                            <i class="fas fa-trash-alt mr-2"></i>
                            Supprimer
                        </button>
                    </div>
                </div>
                
                <!-- Bouton de fermeture -->
                <button onclick="closeModal()" class="absolute top-4 right-4 text-gray-400 hover:text-gray-600 transition-colors">
                    <i class="fas fa-times text-xl"></i>
                </button>
            </div>
        </div>
    </div>

    <script src="/javascripts/auth.js"></script>
    <script>
        // Variables globales pour le filtrage
        let allCoupons = [];
        let currentFilter = 'all';

        // Check authentication on page load
        document.addEventListener('DOMContentLoaded', function() {
            if (!window.authManager.isAuthenticated()) {
                window.location.href = '/login';
                return;
            }
            
            loadCoupons();
        });

        async function loadCoupons() {
            try {
                const response = await fetch('/api/coupons');
                const data = await response.json();
                
                if (data.success) {
                    allCoupons = data.data;
                    updateCouponCounts();
                    displayCoupons(allCoupons);
                } else {
                    showMessage('Erreur lors du chargement des coupons', false);
                }
            } catch (error) {
                console.error('Error loading coupons:', error);
                showMessage('Erreur de connexion', false);
            }
        }

        function updateCouponCounts() {
            const counts = {
                all: allCoupons.length,
                pending: allCoupons.filter(c => c.status === 'pending').length,
                verified: allCoupons.filter(c => c.status === 'verified').length,
                invalid: allCoupons.filter(c => c.status === 'invalid').length
            };

            document.getElementById('count-all').textContent = counts.all;
            document.getElementById('count-pending').textContent = counts.pending;
            document.getElementById('count-verified').textContent = counts.verified;
            document.getElementById('count-invalid').textContent = counts.invalid;
        }

        function filterCoupons(status) {
            currentFilter = status;
            
            // Mettre à jour l'apparence des onglets
            document.querySelectorAll('[id^="tab-"]').forEach(tab => {
                tab.classList.remove('bg-white', 'text-gray-900', 'shadow-sm');
                tab.classList.add('text-gray-600', 'hover:text-gray-900', 'hover:bg-white');
            });
            
            const activeTab = document.getElementById(`tab-${status}`);
            activeTab.classList.remove('text-gray-600', 'hover:text-gray-900', 'hover:bg-white');
            activeTab.classList.add('bg-white', 'text-gray-900', 'shadow-sm');
            
            // Filtrer les coupons
            let filteredCoupons = allCoupons;
            if (status !== 'all') {
                filteredCoupons = allCoupons.filter(coupon => coupon.status === status);
            }
            
            displayCoupons(filteredCoupons);
        }

        function displayCoupons(coupons) {
            console.log(coupons)
            const couponsList = document.getElementById('couponsList');
            
            if (coupons.length === 0) {
                console.log(coupons)
                couponsList.innerHTML = '<div class="p-4 text-center text-gray-500">Aucun coupon trouvé</div>';
                return;
            }

            couponsList.innerHTML = coupons.map(coupon => `
                <div class="p-6 hover:bg-gray-50 border-b border-gray-200">
                    <div class="flex items-start justify-between">
                        <div class="flex-1">
                            <!-- Header avec ID et statut -->
                            <div class="flex items-center space-x-4 mb-4">
                                <div class="flex-shrink-0">
                                    <div class="w-10 h-10 bg-indigo-100 rounded-full flex items-center justify-center">
                                        <span class="text-indigo-600 font-bold text-sm">#${coupon.id}</span>
                                    </div>
                                </div>
                                <div class="flex-1">
                                    <h3 class="text-lg font-semibold text-gray-900">
                                        ${coupon.type} - ${coupon.montant} ${coupon.devise}
                                    </h3>
                                    <p class="text-sm text-gray-600">${coupon.email}</p>
                                </div>
                                <div class="flex items-center space-x-2">
                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${
                                        coupon.status === 'verified' ? 'bg-green-100 text-green-800' :
                                        coupon.status === 'invalid' ? 'bg-red-100 text-red-800' :
                                        'bg-yellow-100 text-yellow-800'
                                    }">
                                        ${coupon.status === 'verified' ? '✅ Vérifié' :
                                          coupon.status === 'invalid' ? '❌ Invalide' : '⏳ En attente'}
                                    </span>
                                </div>
                            </div>

                            <!-- Codes et leurs statuts -->
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h4 class="font-medium text-gray-900 mb-2">Codes de coupon</h4>
                                    <div class="space-y-2">
                                        <div class="flex items-center justify-between">
                                            <span class="text-sm font-medium">Code 1:</span>
                                            <div class="flex items-center space-x-2">
                                                <code class="text-xs bg-white px-2 py-1 rounded border">${coupon.code1 || 'N/A'}</code>
                                                <span class="text-xs ${coupon.code1Valid ? 'text-green-600' : 'text-red-600'}">
                                                    ${coupon.code1Valid ? '✅' : '❌'}
                                                </span>
                                                ${coupon.code1 ? `
                                                <div class="flex space-x-1">
                                                    <button onclick="validateCode(${coupon.id}, 'code1')" 
                                                            class="text-xs px-2 py-1 bg-green-100 text-green-700 rounded hover:bg-green-200 transition">
                                                        ✓ Valider
                                                    </button>
                                                    <button onclick="invalidateCode(${coupon.id}, 'code1')" 
                                                            class="text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition">
                                                        ✗ Rejeter
                                                    </button>
                                                </div>
                                                ` : ''}
                                            </div>
                                        </div>
                                        ${coupon.code2 ? `
                                        <div class="flex items-center justify-between">
                                            <span class="text-sm font-medium">Code 2:</span>
                                            <div class="flex items-center space-x-2">
                                                <code class="text-xs bg-white px-2 py-1 rounded border">${coupon.code2}</code>
                                                <span class="text-xs ${coupon.code2Valid ? 'text-green-600' : 'text-red-600'}">
                                                    ${coupon.code2Valid ? '✅' : '❌'}
                                                </span>
                                                <div class="flex space-x-1">
                                                    <button onclick="validateCode(${coupon.id}, 'code2')" 
                                                            class="text-xs px-2 py-1 bg-green-100 text-green-700 rounded hover:bg-green-200 transition">
                                                        ✓ Valider
                                                    </button>
                                                    <button onclick="invalidateCode(${coupon.id}, 'code2')" 
                                                            class="text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition">
                                                        ✗ Rejeter
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        ` : ''}
                                        ${coupon.code3 ? `
                                        <div class="flex items-center justify-between">
                                            <span class="text-sm font-medium">Code 3:</span>
                                            <div class="flex items-center space-x-2">
                                                <code class="text-xs bg-white px-2 py-1 rounded border">${coupon.code3}</code>
                                                <span class="text-xs ${coupon.code3Valid ? 'text-green-600' : 'text-red-600'}">
                                                    ${coupon.code3Valid ? '✅' : '❌'}
                                                </span>
                                                <div class="flex space-x-1">
                                                    <button onclick="validateCode(${coupon.id}, 'code3')" 
                                                            class="text-xs px-2 py-1 bg-green-100 text-green-700 rounded hover:bg-green-200 transition">
                                                        ✓ Valider
                                                    </button>
                                                    <button onclick="invalidateCode(${coupon.id}, 'code3')" 
                                                            class="text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition">
                                                        ✗ Rejeter
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        ` : ''}
                                        ${coupon.code4 ? `
                                        <div class="flex items-center justify-between">
                                            <span class="text-sm font-medium">Code 4:</span>
                                            <div class="flex items-center space-x-2">
                                                <code class="text-xs bg-white px-2 py-1 rounded border">${coupon.code4}</code>
                                                <span class="text-xs ${coupon.code4Valid ? 'text-green-600' : 'text-red-600'}">
                                                    ${coupon.code4Valid ? '✅' : '❌'}
                                                </span>
                                                <div class="flex space-x-1">
                                                    <button onclick="validateCode(${coupon.id}, 'code4')" 
                                                            class="text-xs px-2 py-1 bg-green-100 text-green-700 rounded hover:bg-green-200 transition">
                                                        ✓ Valider
                                                    </button>
                                                    <button onclick="invalidateCode(${coupon.id}, 'code4')" 
                                                            class="text-xs px-2 py-1 bg-red-100 text-red-700 rounded hover:bg-red-200 transition">
                                                        ✗ Rejeter
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        ` : ''}
                                    </div>
                                </div>

                                <!-- Informations supplémentaires -->
                                <div class="bg-gray-50 p-4 rounded-lg">
                                    <h4 class="font-medium text-gray-900 mb-2">Informations</h4>
                                    <div class="space-y-2 text-sm">
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Code 1:</span>
                                            <span class="text-gray-900 font-mono text-xs">${coupon.code1 || 'N/A'}</span>
                                        </div>
                                        ${coupon.code2 ? `
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Code 2:</span>
                                            <span class="text-gray-900 font-mono text-xs">${coupon.code2}</span>
                                        </div>
                                        ` : ''}
                                        ${coupon.code3 ? `
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Code 3:</span>
                                            <span class="text-gray-900 font-mono text-xs">${coupon.code3}</span>
                                        </div>
                                        ` : ''}
                                        ${coupon.code4 ? `
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Code 4:</span>
                                            <span class="text-gray-900 font-mono text-xs">${coupon.code4}</span>
                                        </div>
                                        ` : ''}
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Créé le:</span>
                                            <span class="text-gray-900">${new Date(coupon.createdAt).toLocaleString('fr-FR')}</span>
                                        </div>
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Mis à jour le:</span>
                                            <span class="text-gray-900">${new Date(coupon.updatedAt).toLocaleString('fr-FR')}</span>
                                        </div>
                                        ${coupon.verificationDate ? `
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Vérifié le:</span>
                                            <span class="text-gray-900">${new Date(coupon.verificationDate).toLocaleString('fr-FR')}</span>
                                        </div>
                                        ` : ''}
                                        ${coupon.encryptedData ? `
                                        <div class="flex justify-between">
                                            <span class="text-gray-600">Données chiffrées:</span>
                                            <span class="text-gray-900 text-xs">${coupon.encryptedData.substring(0, 20)}...</span>
                                        </div>
                                        ` : ''}
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Actions -->
                        <div class="flex flex-col space-y-2 ml-4">
                            ${coupon.status === 'pending' ? `
                            <button onclick="validateCoupon(${coupon.id})" 
                                    class="inline-flex items-center px-4 py-2 border border-green-300 text-sm font-medium rounded-md text-green-700 bg-green-50 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition">
                                <i class="fas fa-check-circle mr-2"></i>
                                Valider Coupon
                            </button>
                            <button onclick="invalidateCoupon(${coupon.id})" 
                                    class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition">
                                <i class="fas fa-times-circle mr-2"></i>
                                Rejeter Coupon
                            </button>
                            ` : ''}
                            <button onclick="sendReceivedEmail(${coupon.id})" 
                                    class="inline-flex items-center px-4 py-2 border border-indigo-300 text-sm font-medium rounded-md text-indigo-700 bg-indigo-50 hover:bg-indigo-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition">
                                <i class="fas fa-envelope mr-2"></i>
                                Envoyer l'email
                            </button>
                            <button onclick="viewCouponDetails(${coupon.id})" 
                                    class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition">
                                <i class="far fa-eye mr-2"></i>
                                Détails
                            </button>
                            <button onclick="deleteCoupon(${coupon.id})" 
                                    class="inline-flex items-center px-4 py-2 border border-red-300 text-sm font-medium rounded-md text-red-700 bg-red-50 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition">
                                <i class="fas fa-trash-alt mr-2"></i>
                                Supprimer
                            </button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        // Fonction pour supprimer un coupon individuel
        function deleteCoupon(couponId) {
            showConfirmationModal(
                'Supprimer le coupon',
                `Êtes-vous sûr de vouloir supprimer le coupon #${couponId} ? Cette action est irréversible.`,
                async () => {
                    try {
                        const response = await fetch(`/api/coupons/${couponId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        
                        const data = await response.json();
                        
                        if (data.success) {
                            showMessage(`Coupon #${couponId} supprimé avec succès`, true);
                            loadCoupons(); // Recharger la liste
                        } else {
                            showMessage(`Erreur: ${data.message}`, false);
                        }
                    } catch (error) {
                        console.error('Error deleting coupon:', error);
                        showMessage('Erreur lors de la suppression du coupon', false);
                    }
                    closeModal();
                }
            );
        }

        // Fonction pour supprimer tous les coupons
        function deleteAllCoupons() {
            showConfirmationModal(
                'Supprimer tous les coupons',
                'Êtes-vous sûr de vouloir supprimer TOUS les coupons ? Cette action est irréversible et supprimera définitivement toutes les données.',
                async () => {
                    try {
                        const response = await fetch('/api/coupons/all', {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        
                        const data = await response.json();
                        
                        if (data.success) {
                            showMessage(`Tous les coupons ont été supprimés avec succès (${data.deletedCount} coupon(s))`, true);
                            loadCoupons(); // Recharger la liste et mettre à jour les compteurs
                        } else {
                            showMessage(`Erreur: ${data.message}`, false);
                        }
                    } catch (error) {
                        console.error('Error deleting all coupons:', error);
                        showMessage('Erreur lors de la suppression de tous les coupons', false);
                    }
                    closeModal();
                }
            );
        }

        // Fonction pour afficher la modal de confirmation
        function showConfirmationModal(title, message, onConfirm) {
            const modal = document.getElementById('confirmationModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalMessage = document.getElementById('modalMessage');
            const confirmButton = document.getElementById('confirmButton');
            
            modalTitle.textContent = title;
            modalMessage.textContent = message;
            
            // Supprimer les anciens event listeners
            confirmButton.replaceWith(confirmButton.cloneNode(true));
            const newConfirmButton = document.getElementById('confirmButton');
            
            newConfirmButton.addEventListener('click', onConfirm);
            
            // Animation d'apparition
            modal.style.display = 'block';
            requestAnimationFrame(() => {
                modal.style.opacity = '1';
                const modalContent = modal.querySelector('.transform');
                if (modalContent) {
                    modalContent.style.transform = 'scale(1)';
                }
            });
        }

        // Fonction pour fermer la modal
        function closeModal() {
            const modal = document.getElementById('confirmationModal');
            const modalContent = modal.querySelector('.transform');
            
            // Animation de disparition
            if (modalContent) {
                modalContent.style.transform = 'scale(0.95)';
            }
            modal.style.opacity = '0';
            
            setTimeout(() => {
                modal.style.display = 'none';
            }, 200);
        }

        // Fermer la modal en cliquant à l'extérieur
        document.addEventListener('click', function(event) {
            const modal = document.getElementById('confirmationModal');
            const modalContent = modal.querySelector('.transform');
            if (event.target === modal && !modalContent.contains(event.target)) {
                closeModal();
            }
        });

        // Fermer la modal avec la touche Escape
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const modal = document.getElementById('confirmationModal');
                if (modal.style.display === 'block') {
                    closeModal();
                }
            }
        });

        async function validateCode(couponId, codeName) {
            try {
                const response = await fetch(`/api/coupons/code/validate/${couponId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        codeName: codeName,
                        codeValue: 'dummy' // Pas utilisé dans la nouvelle logique
                    })
                });
                
                const data = await response.json();
                
                if (data.message) {
                    showMessage(`${codeName} validé avec succès`, true);
                    // Recharger les données pour voir les changements
                    setTimeout(() => loadCoupons(), 1000);
                } else {
                    showMessage(`Erreur: ${data.error}`, false);
                }
            } catch (error) {
                console.error('Error validating code:', error);
                showMessage('Erreur lors de la validation du code', false);
            }
        }

        async function invalidateCode(couponId, codeName) {
            try {
                const response = await fetch(`/api/coupons/code/invalidate/${couponId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ codeName: codeName })
                });
                
                const data = await response.json();
                
                if (data.message) {
                    showMessage(`${codeName} marqué comme invalide`, true);
                    // Recharger les données pour voir les changements
                    setTimeout(() => loadCoupons(), 1000);
                } else {
                    showMessage(`Erreur: ${data.error}`, false);
                }
            } catch (error) {
                console.error('Error invalidating code:', error);
                showMessage('Erreur lors de l\'invalidation du code', false);
            }
        }

        async function validateCoupon(couponId) {
            try {
                const response = await fetch(`/api/coupons/validate/${couponId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    if (data.reason === 'Tous les codes sont invalides') {
                        showMessage(`⚠️ ${data.message}`, false);
                    } else {
                        showMessage(`✅ ${data.message}`, true);
                    }
                    // Recharger les données pour voir les changements
                    setTimeout(() => loadCoupons(), 1000);
                } else {
                    showMessage(`Erreur: ${data.message}`, false);
                }
            } catch (error) {
                console.error('Error validating coupon:', error);
                showMessage('Erreur lors de la validation du coupon', false);
            }
        }

        async function invalidateCoupon(couponId) {
            try {
                const response = await fetch(`/api/coupons/invalidate/${couponId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showMessage(`❌ ${data.message}`, true);
                    // Recharger les données pour voir les changements
                    setTimeout(() => loadCoupons(), 1000);
                } else {
                    showMessage(`Erreur: ${data.message}`, false);
                }
            } catch (error) {
                console.error('Error invalidating coupon:', error);
                showMessage('Erreur lors de l\'invalidation du coupon', false);
            }
        }

        async function sendReceivedEmail(couponId) {
            try {
                const response = await fetch(`/api/coupons/validate/${couponId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showMessage(`Email de confirmation envoyé avec succès pour le coupon #${couponId}`, true);
                } else {
                    showMessage(`Erreur: ${data.message}`, false);
                }
            } catch (error) {
                console.error('Error sending email:', error);
                showMessage('Erreur lors de l\'envoi de l\'email', false);
            }
        }

        function showMessage(message, isSuccess) {
            const messageDiv = document.getElementById('message');
            messageDiv.className = `mt-4 p-4 rounded-md ${isSuccess ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`;
            messageDiv.textContent = message;
            messageDiv.classList.remove('hidden');
            
            // Hide message after 5 seconds
            setTimeout(() => {
                messageDiv.classList.add('hidden');
            }, 5000);
        }

        function logout() {
            window.authManager.logout();
        }

        function viewCouponDetails(couponId) {
            // Pour l'instant, afficher une alerte avec les détails
            // Plus tard, on peut créer une modal ou une page dédiée
            alert(`Détails du coupon #${couponId}\n\nCette fonctionnalité peut être étendue pour afficher plus d'informations dans une modal.`);
        }
    </script>
</body>
</html>