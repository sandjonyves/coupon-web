name: Full CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name:  Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

  backend-setup:
    name:  setup Backend 
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install backend dependencies
        working-directory: ./backend
        run: npm install
      - name: Create .env file
        working-directory: ./backend
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
          echo "PORT=3001" >> .env



  docker-backend:
    name:  Dockerize Backend
    runs-on: ubuntu-latest
    needs: backend-setup
    steps:
      - uses: actions/checkout@v4
      - name: Build backend image
        working-directory: ./backend
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/romaric-app:tagname .
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Push backend image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/romaric-app:tagname

  deploy-backend:
    name:  Deploy Backend
    runs-on: ubuntu-latest
    needs: docker-backend
    steps:
      - name: Trigger Render Deploy Hook
        run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}

   